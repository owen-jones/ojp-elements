
:host {

  // PUBLIC CSS VALUES - can be overwritten by end user
  // likely to be persistent across a project and/or
  // easier to set as css vars so they can use Utopia
  // :)

  // Gap between columns
  --ojp-row--col-gap: var(--space-2xs-xs);
  // Vertical gap between stacking columns in a row
  --ojp-row--row-gap: var(--space-2xs-xs);
  // Inline margin between rows
  --ojp-row--margin-inline: var(--space-xs-s);

  //// Minimum gutter width
  --ojp-row--gutter: var(--space-s-2xl);

  // PROPS - can be overwritten with props b/c
  // likely to be different per component
  // Defined in global.scss:
  //// Number of columns
  //// --ojp-row--mcols
  //// --ojp-row--tcols
  //// --ojp-row--dcols
  //// --ojp-row--cols

  // Align Items
  --ojp-row--align-items: stretch;
  // Justify Items
  --ojp-row--justify-items: stretch;


  // CALC/HELPER VARS

  // Max Wrapper Width (not including gutters)
  --ojp-row--max-wrapper-width: 1440px;

  // STYLES
  display: block;
  padding-left: var(--ojp-row--gutter);
  padding-right: var(--ojp-row--gutter);

  .ojp-row__container {
    align-items: var(--ojp-row--align-items);
    column-gap: var(--ojp-row--col-gap);
    display: grid;
    grid-template-columns: repeat(var(--ojp-row--cols), 1fr);
    height: 100%;
    justify-items: var(--ojp-row--justify-items);
    margin: var(--ojp-row--margin-inline) auto;
    max-width: var(--ojp-row--max-wrapper-width);
    row-gap: var(--ojp-row--row-gap);
    width: 100%;
  }
}

// No top margin on first or only row
:host(:first-child) .ojp-row__container,
:host(:only-child) .ojp-row__container{
  margin-top: 0;
}

// No bottom margin on last or only row
:host(:last-child) .ojp-row__container,
:host(:only-child) .ojp-row__container {
  margin-bottom: 0;
}